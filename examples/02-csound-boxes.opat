
(:patch
 (:name "02-csound-boxes")
 (:doc "")
 (:info
  (:created "2020/11/16 22:17:05")
  (:modified "2020/11/16 23:00:36")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (916 719)) (:position (695 119)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 523)
   (:y 429)
   (:w 154)
   (:h 111)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "f 1	 0	 4096	 10	 1	 "
         "f 2	 0	 2048	 7	 .0450	 205	 .3130	 205	 .7460	 204	 1.0000	 205	 .8060	 205	 .3130	 205	 .2540	 205	 .3730	 204	 .1040	 410	 .0000	 "
         ";p1	p2	p3	p4	p5	p6	
i 1	 0	 1	 10000	 440	 .5000	 "
         "i 1	 0	 1	 10000	 380	 .5000	 "
         "i 1	 .2000	 1	 10000	 440	 0	 "
         "i 1	 1.4000	 1	 10000	 680	 1	 "
         "e"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 0))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference write-csound-score)
   (:group-id nil)
   (:name "write-csound-score")
   (:x 415)
   (:y 361)
   (:w 144)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OUT")
     (:value no-file)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 36)
   (:y 65)
   (:w 155)
   (:h 21)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 11) (:style :bold)))
   (:align nil)
   (:text "Score generation boxes")
   (:id 2))
  (:comment
   (:x 35)
   (:y 111)
   (:w 153)
   (:h 83)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align nil)
   (:text
    "Compatibility notes:
 
The \"Orchestra\" features of OM2Csound are not available yet in OM#.")
   (:id 3))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference i-statements)
   (:group-id nil)
   (:name "i-statements")
   (:x 718)
   (:y 231)
   (:w 107)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INSTR")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ONSETS")
     (:value (:list 0.2 1.4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURS")
     (:value (:list 1 1))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value (:list 10000 10000))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value (:list 440 680))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value (:list 0 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference i-statements)
   (:group-id nil)
   (:name "i-statements")
   (:x 514)
   (:y 205)
   (:w 107)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INSTR")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ONSETS")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DURS")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value (:list 10000 10000))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "params")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference pargen05-07)
   (:group-id nil)
   (:name "pargen05-07")
   (:x 413)
   (:y 118)
   (:w 110)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BPF")
     (:value
      (:object
       (:class bpf)
       (:slots
        ((:onset 0)
         (:duration 100)
         (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
         (:action nil)
         (:color (:color 0 0 0 1.0))
         (:decimals 0)
         (:x-points (:list 0 100))
         (:y-points (:list 0 100))))
       (:add-slots ((:name nil)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PNTS")
     (:value 2048)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-MIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-MAX")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NDEC")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux4")
   (:x 615)
   (:y 88)
   (:w 60)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0.5 0.5))
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux3")
   (:x 552)
   (:y 125)
   (:w 64)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 440 380))
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux1")
   (:x 535)
   (:y 155)
   (:w 40)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 1))
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 492)
   (:y 171)
   (:w 40)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 0))
   (:id 10))
  (:box
   (:type :function)
   (:reference list)
   (:group-id nil)
   (:name "list")
   (:x 365)
   (:y 281)
   (:w 183)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 284)
   (:y 20)
   (:w 158)
   (:h 63)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 10)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0 0 0 1.0))
       (:decimals 0)
       (:x-points (:list 0 1 2 3 4 5 6 7 8 10))
       (:y-points (:list 3 21 50 67 54 21 17 25 7 0))))
     (:add-slots ((:name "BPF")))))
   (:id 12))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference table)
   (:group-id nil)
   (:name "table")
   (:x 380)
   (:y 221)
   (:w 102)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TABLE")
     (:value 2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIME")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value 2048)
     (:reactive nil))
    (:input (:type :standard) (:name "GEN") (:value 7) (:reactive nil))
    (:input
     (:type :standard)
     (:name "PARGEN")
     (:value (:list 512 512 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference table)
   (:group-id nil)
   (:name "table")
   (:x 238)
   (:y 226)
   (:w 112)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TABLE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIME")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIZE")
     (:value 4096)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GEN")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PARGEN")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "cs-synth.aiff")
   (:x 208)
   (:y 581)
   (:w 177)
   (:h 77)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:gain 1.0)
       (:access-from-file nil)
       (:file-pathname nil)))))
   (:id 15))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "list")
   (:x 386)
   (:y 461)
   (:w 94)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "cs-synth.aiff")
   (:id 16))
  (:box
   (:library "csound")
   (:type :function)
   (:reference csound-synth)
   (:group-id nil)
   (:name "csound-synth")
   (:x 291)
   (:y 506)
   (:w 112)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ORC")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCO")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "out") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:comment
   (:x 40)
   (:y 31)
   (:w 168)
   (:h 30)
   (:fgcolor (:color 6/85 14/85 106/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 18) (:style :bold)))
   (:align nil)
   (:text "OM2Csound")
   (:id 18))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "textfile")
   (:x 103)
   (:y 318)
   (:w 209)
   (:h 157)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :text-list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "sr= 44100 "
         "kr= 4410 "
         "ksmps=  10 "
         "nchnls= 2"
         " "
         "instr 1 "
         "k1  oscil1  0	,1	,p3,2	"
         "asig  oscili  p4,p5,1	"
         "     outs  asig*k1*p6,asig*k1*(1-p6)"
         "    endin"
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 19))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 781)
   (:y 98)
   (:w 43)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 1))
   (:id 20))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 753)
   (:y 161)
   (:w 70)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 440 680))
   (:id 21))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 725)
   (:y 68)
   (:w 98)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 10000 10000))
   (:id 22))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 737)
   (:y 192)
   (:w 43)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 1))
   (:id 23))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 713)
   (:y 129)
   (:w 63)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0.2 1.4))
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 714)
   (:y 161)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 25))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 607)
   (:y 165)
   (:w 98)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 10000 10000))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 425)
   (:y 87)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2048)
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 452)
   (:y 26)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 472)
   (:y 57)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 29))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 492)
   (:y 87)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 30))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 397)
   (:y 189)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 31))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 408)
   (:y 158)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2048)
   (:id 32))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 433)
   (:y 189)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7)
   (:id 33))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 237)
   (:y 191)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 34))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 258)
   (:y 97)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 35))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 271)
   (:y 128)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4096)
   (:id 36))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 298)
   (:y 159)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 37))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 319)
   (:y 191)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1))
   (:id 38)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 11 :in 3)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 2)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 13 :in 4)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 5)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 4)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 5 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 4 :in 5)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 4 :in 4)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 4 :in 3)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 4 :in 2)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 5 :in 3)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 6 :in 2)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 6 :in 3)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 6 :in 4)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 13 :in 3)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 14 :in 3)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 14 :in 4)))))