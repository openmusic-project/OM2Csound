; OM File Header - Saved 2010/10/25 13:34:08
; (6.030002 :patc (om-make-point 25 37) (om-make-point 521 691) (om-make-point 1019 474) "No documentation " 183 0 nil "2010/10/25 13:32:37")
; End File Header
(in-package :om)(load-lib-for (quote ("OM2Csound")))(setf *om-current-persistent* (om-load-patch1 "01-tables-pargen" (quote ((om-load-boxcomment "comment" (om-make-point 56 30) (quote "GEN15") nil (om-make-point 568 146) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote genfun) "PARGEN15" (quote pargen15) (quote ((om-load-inputfun (quote input-funbox) "xint" "XINT" 1) (om-load-inputfun (quote input-funbox) "xamp" "XAMP" 1) (om-load-inputfun (quote input-funbox) "Ho" "HO" (list 1 2)) (om-load-inputfun (quote input-funbox) "Phs" "PHS" (list 1 2)))) (om-make-point 675 166) nil nil nil nil 1) (om-load-boxcall (quote genfun) "TABLE" (quote table) (quote ((om-load-inputfun (quote input-funbox) "table" "TABLE" 1) (om-load-inputfun (quote input-funbox) "time" "TIME" 0) (om-load-inputfun (quote input-funbox) "size" "SIZE" 4096) (om-load-inputfun (quote input-funbox) "gen" "GEN" 10) (om-load-inputfun (quote input-funbox) "pargen" "PARGEN" (list 1)))) (om-make-point 574 264) (om-make-point 154 67) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 663 134) (om-make-point 26 28) 10 "10" nil) (om-load-boxcall (quote bastype) "aux1 2" (quote t) (quote nil) (om-make-point 691 128) (om-make-point 20 28) 1 "1" nil) (om-load-boxcall (quote bastype) "aux2 2" (quote t) (quote nil) (om-make-point 645 85) (om-make-point 136 28) (list 1 0.5 0.3 0.2 0.1 0.05) "(1 0.5 0.3 0.2 0.1 0.05)" nil) (om-load-boxcall (quote bastype) "aux3 2" (quote t) (quote nil) (om-make-point 721 113) (om-make-point 122 28) (list 0 45 60 90 180 270) "(0 45 60 90 180 270)" nil) (om-load-boxcall (quote bastype) "aux4 2" (quote t) (quote nil) (om-make-point 592 232) (om-make-point 20 28) 1 "1" nil) (om-load-boxcall (quote bastype) "aux5 2" (quote t) (quote nil) (om-make-point 618 232) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux6 2" (quote t) (quote nil) (om-make-point 635 204) (om-make-point 38 28) 1024 "1024" nil) (om-load-boxcall (quote bastype) "aux7 2" (quote t) (quote nil) (om-make-point 667 232) (om-make-point 26 28) 15 "15" nil) (om-load-boxcomment "comment 2" (om-make-point 252 64) (quote "=> ((f 1 0 1024 15 10 1 1 0 0.5 45 0.3 60 0.2 90 0.1 180 0.05 270))") "" (om-make-point 578 356) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 118 30) (quote "GEN05 / GEN07") nil (om-make-point 17 115) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 482 34) (quote "PARGENx : Generates formatted parameters for GENx tables") nil (om-make-point 206 11) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote genfun) "PARGEN05-07" (quote pargen05-07) (quote ((om-load-inputfun (quote input-funbox) "a BPF object" "BPF" (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (om-load-inputfun (quote input-funbox) "number of points" "PNTS" 2048) (om-load-inputfun (quote input-funbox) "min y value" "Y-MIN" 0) (om-load-inputfun (quote input-funbox) "max y value" "Y-MAX" 1) (om-load-inputfun (quote input-funbox) "number of decimals" "NDEC" 3))) (om-make-point 237 164) (om-make-point 164 67) nil nil nil 1) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 274 128) (om-make-point 38 28) 2048 "2048" nil) (om-load-boxcall (quote bastype) "aux5" (quote t) (quote nil) (om-make-point 354 129) (om-make-point 20 28) 1 "1" nil) (om-load-boxcomment "comment2" (om-make-point 53 56) (quote "max$ordinate $value") "" (om-make-point 355 75) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 53 56) (quote "min$ordinate $value") "" (om-make-point 308 76) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux7" (quote t) (quote nil) (om-make-point 320 128) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux6" (quote t) (quote nil) (om-make-point 414 135) (om-make-point 20 28) 3 "3" nil) (om-load-boxcomment "comment" (om-make-point 133 42) (quote "number of values =$(num of x points * 2 ) - 1 ") "" (om-make-point 387 227) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 224 39) (quote "[The output must be nonzero and alike in sign for GEN05. No  restriction for GEN07]") "" (om-make-point 4 177) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 323 59) (quote "=> ((f 2 0 2048 7 0.065 205 0.457 205 1.0 204 0.978 205 0.891 205 0.717 205 0.609 205 0.413 204 0.152 205 0.065 205 0.0))") "" (om-make-point 48 363) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)))) (om-make-point 193 61) (om-make-point 67 91) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 1 2 3 4 5 6 7 8 9 10)) (quote (3 21 46 45 41 33 28 19 7 3 0)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (deltapict outport inport zoom cmnpref notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems picture)) (list (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450 0 0 (quote t) nil)) t nil nil t) (om-load-boxcomment "comment" (om-make-point 57 28) (quote "ndecimals") "" (om-make-point 402 107) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 29 28) (quote "size") "" (om-make-point 273 108) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment11111" (om-make-point 50 28) (quote "others...") "" (om-make-point 318 235) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment1111" (om-make-point 23 28) (quote "p4") "" (om-make-point 251 234) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment111" (om-make-point 23 28) (quote "p3") "" (om-make-point 193 233) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment11" (om-make-point 23 28) (quote "p2") "" (om-make-point 142 233) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment1" (om-make-point 23 28) (quote "p1") "" (om-make-point 87 233) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 14 28) (quote "f") "" (om-make-point 73 250) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 255 255) (om-make-point 20 28) 7 "7" nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 192 255) (om-make-point 38 28) 2048 "2048" nil) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 146 253) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 92 254) (om-make-point 20 28) 2 "2" nil) (om-load-boxcall (quote genfun) "TABLE1" (quote table) (quote ((om-load-inputfun (quote input-funbox) "table" "TABLE" 2) (om-load-inputfun (quote input-funbox) "ttab" "TTAB" 0) (om-load-inputfun (quote input-funbox) "points" "POINTS" 2048) (om-load-inputfun (quote input-funbox) "gen" "GEN" 7) (om-load-inputfun (quote input-funbox) "pargen" "PARGEN" (list 512 512 1)))) (om-make-point 47 292) (om-make-point 327 61) nil nil nil 1))) (quote ((3 0 1 0 nil 0) (4 0 1 1 nil 0) (5 0 1 2 nil 0) (6 0 1 3 nil 0) (7 0 2 0 nil 0) (8 0 2 1 nil 0) (9 0 2 2 nil 0) (10 0 2 3 nil 0) (1 0 2 4 nil 0) (24 0 14 0 nil 0) (15 0 14 1 nil 0) (19 0 14 2 nil 0) (16 0 14 3 nil 0) (20 0 14 4 nil 0) (36 0 37 0 nil 0) (35 0 37 1 nil 0) (34 0 37 2 nil 0) (33 0 37 3 nil 0) (14 0 37 4 nil 0))) nil 6.030002))
