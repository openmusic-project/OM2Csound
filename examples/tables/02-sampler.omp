; OM File Header - Saved 2010/10/25 13:34:08
; (6.030002 :patc (om-make-point 142 37) (om-make-point 257 240) (om-make-point 867 557) "No documentation " 183 0 nil "2010/10/25 12:53:18")
; End File Header
(in-package :om)(load-lib-for (quote ("OM2Csound")))(setf *om-current-persistent* (om-load-patch1 "02-sampler" (quote ((om-load-boxcall (quote genfun) "SAMPLER 2" (quote sampler) (quote ((om-load-inputfun (quote input-funbox) "bpf" "BPF" (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (om-load-inputfunmenu1 (quote input-funmenu) "mode" "MODE" 0 (list (list "xfact" (quote (quote xfact))) (list "max" (quote (quote max))) (list "sum" (quote (quote sum))))) (om-load-inputfun (quote input-funbox) "nsamp" "NSAMP" 1) (om-load-inputfun (quote input-funbox) "xmin" "XINIT" 0) (om-load-inputfun (quote input-funbox) "xmax" "XEND" 100) (om-load-inputfun (quote input-funbox) "oper" "OPER" 1) (om-load-inputfun (quote input-funbox) "ndec" "NDEC" 0))) (om-make-point 452 273) (om-make-point 275 61) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 682 239) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux1 2" (quote t) (quote nil) (om-make-point 496 234) (om-make-point 39 28) (quote xfact) "xfact" nil) (om-load-boxcall (quote bastype) "aux2 2" (quote t) (quote nil) (om-make-point 540 234) (om-make-point 32 28) 100 "100" nil) (om-load-boxcall (quote bastype) "aux3 2" (quote t) (quote nil) (om-make-point 580 234) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux4 2" (quote t) (quote nil) (om-make-point 611 234) (om-make-point 26 28) 10 "10" nil) (om-load-boxcall (quote bastype) "aux5 2" (quote t) (quote nil) (om-make-point 648 234) (om-make-point 20 28) 7 "7" nil) (om-load-editor-box1 "BPF 3" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)))) (om-make-point 398 141) (om-make-point 351 78) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70)) (quote (49000 93665 5491 21491 3418 83815 45745 99441 38669 43684 51574 44578 87765 67795 72216 20434 86975 11692 50291 65263 64584 70172 95870 23870 55422 90965 44775 8829 30299 38621 22047 45593 77915 36982 85399 20926 31942 85644 26700 71009 59556 22996 62684 61834 81765 61756 54740 27487 7040 19620 80945 64850 19912 39781 25319 37384 5671 22611 91105 30251 92192 64101 69096 53881 39158 93885 39170 76531 44796 31461 32151)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (deltapict outport inport zoom cmnpref notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems picture)) (list (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450 0 0 (quote t) nil)) t nil nil nil) (om-load-editor-box1 "BPF 2" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)))) (om-make-point 408 340) (om-make-point 351 78) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990)) (quotequote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (deltapict outport inport zoom cmnpref notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems picture)) (list (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450 0 0 (quote t) nil)) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 140 34) (quote "TABLE SAMPLER") nil (om-make-point 332 13) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux5" (quote t) (quote nil) (om-make-point 291 260) (om-make-point 30 28) 0.5 "0.5" nil) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 264 260) (om-make-point 26 28) 50 "50" nil) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 237 260) (om-make-point 26 28) 21 "21" nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 204 260) (om-make-point 32 28) 100 "100" nil) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 164 260) (om-make-point 39 28) (quote xfact) "xfact" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 322 260) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote genfun) "SAMPLER" (quote sampler) (quote ((om-load-inputfun (quote input-funbox) "bpf" "BPF" (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (om-load-inputfunmenu1 (quote input-funmenu) "mode" "MODE" 0 (list (list "xfact" (quote (quote xfact))) (list "max" (quote (quote max))) (list "sum" (quote (quote sum))))) (om-load-inputfun (quote input-funbox) "nsamp" "NSAMP" 1) (om-load-inputfun (quote input-funbox) "xmin" "XINIT" 0) (om-load-inputfun (quote input-funbox) "xmax" "XEND" 100) (om-load-inputfun (quote input-funbox) "oper" "OPER" 1) (om-load-inputfun (quote input-funbox) "ndec" "NDEC" 0))) (om-make-point 126 299) (om-make-point 222 67) nil nil nil 1) (om-load-boxcall (quote lispfun) "SIN" (quote sin) (quote ((om-load-inputfun (quote input-funbox) "RADIANS" "RADIANS" nil))) (om-make-point 38 47) nil nil "l" nil 1) (om-load-boxcall (quote genfun) "SAMPLEFUN" (quote samplefun) (quote ((om-load-inputfun (quote input-funbox) "function" "FUN" (quote sin)) (om-load-inputfun (quote input-funbox) "step" "STEP" 0.1))) (om-make-point 27 98) nil nil nil nil 2) (om-load-editor-box1 "BPF1" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)))) (om-make-point 42 178) (om-make-point 107 77) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70)) (quote (0 100 199 296 389 479 565 644 717 783 841 891 932 964 985 997 1000 992 974 946 909 863 808 746 675 598 516 427 335 239 141 42 -58 -158 -256 -351 -443 -530 -612 -688 -757 -818 -872 -916 -952 -978 -994 -1000 -996 -982 -959 -926 -883 -832 -773 -706 -631 -551 -465 -374 -279 -182 -83 17 117 215 312 405 494 578 657)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (deltapict outport inport zoom cmnpref notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems picture)) (list (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450 0 0 (quote t) nil)) t nil nil nil) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)))) (om-make-point 124 374) (om-make-point 148 85) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990)) (quote (432 424 416 408 399 390 381 371 361 351 340 329 318 307 295 283 271 259 246 233 220 207 193 180 166 152 138 124 110 95 81 67 52 38 23 9 -7 -21 -36 -50 -65 -80 -94 -108 -123 -137 -151 -165 -179 -192 -205 -219 -232 -245 -257 -270 -282 -294 -306 -317 -328 -339 -350 -360 -370 -380 -389 -398 -407 -415 -423 -431 -438 -445 -451 -458 -463 -468 -474 -478 -482 -486 -489 -492 -494 -496 -498 -499 -500 -500 -500 -499 -498 -497 -495 -492 -490 -486 -483 -480)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (deltapict outport inport zoom cmnpref notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems picture)) (list (om-make-point 0 0) 0 0 1 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 18350450 2621450 0 0 (quote t) nil)) t nil nil nil))) (quote ((7 0 0 0 nil 0) (2 0 0 1 nil 0) (3 0 0 2 nil 0) (4 0 0 3 nil 0) (5 0 0 4 nil 0) (6 0 0 5 nil 0) (1 0 0 6 nil 0) (0 0 8 2 nil 0) (19 0 16 0 nil 0) (14 0 16 1 nil 0) (13 0 16 2 nil 0) (12 0 16 3 nil 0) (11 0 16 4 nil 0) (10 0 16 5 nil 0) (15 0 16 6 nil 0) (17 0 18 0 nil 0) (18 1 19 0 nil 0) (16 0 20 2 nil 0))) nil 6.030002))
