
(:patch
 (:name "03-OMscore2Csound")
 (:doc "")
 (:info
  (:created "2020/11/16 8:10:29")
  (:modified "2020/11/16 22:59:48")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (806 598)) (:position (712 113)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 59)
   (:y 351)
   (:w 154)
   (:h 44)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "set <out> to 'no-file in order to output simple lines list and visualize in a textfile")
   (:id 0))
  (:comment
   (:x 104)
   (:y 27)
   (:w 168)
   (:h 30)
   (:fgcolor (:color 6/85 14/85 106/255 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 18) (:style :bold)))
   (:align nil)
   (:text "OM2Csound")
   (:id 1))
  (:comment
   (:x 104)
   (:y 57)
   (:w 223)
   (:h 21)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 11) (:style :bold)))
   (:align nil)
   (:text "MAKE-OBJ-SND")
   (:id 2))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference write-csound-score)
   (:group-id nil)
   (:name "write-csound-score")
   (:x 231)
   (:y 357)
   (:w 144)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OUT")
     (:value no-file)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DATA")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:comment
   (:x 34)
   (:y 100)
   (:w 261)
   (:h 68)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "MAKE-OBJ-SND adapts the different parameters to the list provided in 'p5'

This allows to handle and format chords or sequences with same parameter values ")
   (:id 4))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 229)
   (:y 397)
   (:w 191)
   (:h 147)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text-list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :text-list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         ";p1	p2	p3	p4	p5	
i 1	 0	 3	 80	 195.9977	 "
         "i 1	 5	 3	 75	 369.9944	 "
         "i 1	 5	 3	 75	 698.4565	 "
         "i 1	 5	 3	 75	 538.5836	 "
         "i 1	 10	 3	 70	 65.4064	 "
         "i 1	 10	 3	 70	 123.4708	 "
         "i 1	 10	 3	 70	 179.7307	 "
         "i 1	 10	 3	 70	 339.2864	 "
         "i 1	 15	 3	 65	 1209.0792	 "
         "i 1	 15	 3	 65	 1108.7306	 "
         "i 1	 15	 3	 65	 1016.7104	 "
         "i 1	 15	 3	 65	 659.2551	 "
         "i 1	 15	 3	 65	 452.8930	 "
         "e"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 5))
  (:comment
   (:x 345)
   (:y 221)
   (:w 78)
   (:h 22)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "dynamics (db)")
   (:id 6))
  (:comment
   (:x 314)
   (:y 162)
   (:w 38)
   (:h 22)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "durs")
   (:id 7))
  (:comment
   (:x 253)
   (:y 194)
   (:w 42)
   (:h 22)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "onsets")
   (:id 8))
  (:comment
   (:x 231)
   (:y 238)
   (:w 38)
   (:h 22)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "instr")
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux1")
   (:x 253)
   (:y 214)
   (:w 72)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 5 10 15))
   (:id 10))
  (:comment
   (:x 535)
   (:y 235)
   (:w 214)
   (:h 50)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "FREQUENCIES:
((196) (370 698 539) (65 123 180 339) (1209 1109 1017 659 453))")
   (:id 11))
  (:box
   (:type :function)
   (:reference mc->f)
   (:group-id nil)
   (:name "mc->f")
   (:x 448)
   (:y 242)
   (:w 73)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MIDICS?")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 440)
   (:y 144)
   (:w 229)
   (:h 82)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :gf))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 3833)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 5500)
         (:list 6600 7700 7250)
         (:list 3600 4700 5350 6450)
         (:list 8650 8500 8350 7600 6950)))
       (:lonset (:list 0 833 1771 2833 3833))
       (:ldur
        (:list
         (:list 1000)
         (:list 1000 1000 1000)
         (:list 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100)
         (:list 100 100 100)
         (:list 100 100 100 100)
         (:list 100 100 100 100 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)))
       (:lport
        (:list
         (:list nil)
         (:list nil nil nil)
         (:list nil nil nil nil)
         (:list nil nil nil nil nil)))
       (:llegato nil)))))
   (:id 13))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux3")
   (:x 339)
   (:y 242)
   (:w 84)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 80 75 70 65))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 313)
   (:y 186)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 233)
   (:y 262)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 16))
  (:box
   (:library "OM2Csound")
   (:type :function)
   (:reference make-obj-snd)
   (:group-id nil)
   (:name "make-obj-snd")
   (:x 224)
   (:y 295)
   (:w 220)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LINS")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDATS")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDURS")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LP4")
     (:value (:list 1))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LP5")
     (:value (:list 440))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17)))
 (:connections
  (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 4)))
  (:connection (:from (:box 13 :out 1)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 17 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 3 :in 1)))))